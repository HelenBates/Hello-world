#We learnt to load a dataset, the lecturer Hisham provided most of the code
# -*- coding: utf-8 -*-
"""
Created on Wed Mar 14 11:12:20 2018

@author: User
"""

#print(__doc__)
#Code source: Jaques Grobler
# License: BSD 3 clause
# changes made for teaching purpose by Hisham Ihshaish

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn import datasets
from sklearn.metrics import mean_squared_error, r2_score

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Load the diabetes dataset
diabetes = datasets.load_diabetes()
#if you want to display dataset keys uncomment below ie remove the hash sign.
print (diabetes.keys())

data = pd.DataFrame (diabetes.data, columns=[diabetes.feature_names])
target = pd.DataFrame(diabetes.target)

#print(data.describe())
X = diabetes.data[:, np.newaxis, 2]
y = np.array(target)

X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)
lr = LinearRegression().fit(X_train, y_train)

print("lr.coef_: {}".format(lr.coef_))
print("lr.intercept_: {}".format(lr.intercept_))

#make predictions using the testing set
y_pred = lr.predict(X_test)
print('Coefficient of Determination R Squared: %.2f' % r2_score(y_test, y_pred))

#plot outputs
plt.scatter(X_test, y_test, color='black')
plt.plot(X_test, y_pred, color= 'blue', linewidth=3)
plt.xticks(())
plt.yticks(())
plt.show()
